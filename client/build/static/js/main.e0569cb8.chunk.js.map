{"version":3,"sources":["Components/Wrapper/index.js","Components/Col/index.js","Components/BookCard/index.js","Components/SeachForm/index.js","utils/API.js","utils/index.js","App.js","serviceWorker.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","className","children","Col","size","split","map","join","BookCard","Fragment","key","_id","title","authors","description","alt","src","image","href","link","SearchForm","style","display","htmlFor","onChange","handleInputChange","value","name","type","placeholder","id","onClick","handleFormSubmit","refreshPage","API","search","query","axios","get","getBooks","getBook","deleteBook","delete","saveBook","bookData","post","Search","state","books","searchBooks","then","res","console","log","_this","setState","data","items","e","i","volumeInfo","imageLinks","thumbnail","previewLink","catch","err","Object","defineProperty","target","preventDefault","this","window","location","reload","Components_Wrapper","Components_Col","SeachForm","toConsumableArray","item","Components_BookCard","React","Component","App","react_router_dom","react_router","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e0569cb8.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\n\n// This Col component offers us the convenience of being able to set a column's \"size\" prop instead of its className\n// We can also omit the col- at the start of each Bootstrap column class, e.g. size=\"md-12\" instead of className=\"col-md-12\"\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return (\n    <div className={size}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Col;\n","import React from 'react';\r\n\r\nfunction BookCard(props) {\r\n  return (\r\n    <>\r\n      <div className=\"card mb-3\" key={props._id}>\r\n        <h3 className=\"card-title\">\r\n          {props.title} by {props.authors}\r\n        </h3>\r\n        <div>{props.description}</div>\r\n        <div>\r\n          <div className=\"col-md-2\">\r\n            <img alt={props.title} className=\"img-fluid\" src={props.image} />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <a href={props.link} className=\"btn btn-outline-dark mr-3\">\r\n            View\r\n          </a>\r\n        </div>\r\n      </div>\r\n\r\n      <hr></hr>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BookCard;\r\n","import React from 'react';\r\n\r\nfunction SearchForm(props) {\r\n  return (\r\n    <form>\r\n      <div className=\"form-group\" style={{ display: 'flex' }}>\r\n        <label htmlFor=\"search\"></label>\r\n        <input\r\n          onChange={props.handleInputChange}\r\n          value={props.value}\r\n          name=\"search\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Search Organization\"\r\n          id=\"search\"\r\n        />\r\n        <button onClick={props.handleFormSubmit} className=\"btn btn-primary\">\r\n          Search\r\n        </button>\r\n        <button onClick={props.refreshPage} className=\"btn btn-primary ml-1\">\r\n          Reset\r\n        </button>\r\n        {/* <br /> */}\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n","import axios from 'axios';\r\n\r\nconst API_URL = 'https://www.googleapis.com/books/v1/volumes?q=';\r\n\r\nexport default {\r\n  search: function (query) {\r\n    return axios.get(API_URL + query);\r\n  },\r\n\r\n  // Get books\r\n  getBooks: function () {\r\n    return axios.get('/api/books');\r\n  },\r\n\r\n  // Get book with given id\r\n  getBook: function (id) {\r\n    return axios.get('api/books/' + id);\r\n  },\r\n\r\n  // Delets the book with the given id\r\n  deleteBook: function (id) {\r\n    return axios.delete('/api/books' + id);\r\n  },\r\n\r\n  // Saves a book to the database\r\n  saveBook: function (bookData) {\r\n    return axios.post('/api/books', bookData);\r\n  },\r\n};\r\n","import React from 'react';\r\nimport BookCard from '../Components/BookCard';\r\nimport SearchForm from '../Components/SeachForm';\r\nimport Wrapper from '../Components/Wrapper';\r\nimport Col from '../Components/Col';\r\nimport API from './API';\r\nimport './App.css';\r\n\r\nclass Search extends React.Component {\r\n  state = { books: [], search: '' };\r\n\r\n  componentDidMount() {\r\n    this.searchBooks(\r\n      'https://www.googleapis.com/books/v1/volumes?q=harry+potter'\r\n    );\r\n  }\r\n\r\n  refreshPage() {\r\n    window.location.reload(false);\r\n  }\r\n\r\n  searchBooks = (query) => {\r\n    API.search(query)\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({\r\n          books: res.data.items.map((e, i) => ({\r\n            title: e.volumeInfo.title,\r\n            authors: e.volumeInfo.authors,\r\n            description: e.volumeInfo.description,\r\n            image: e.volumeInfo.imageLinks.thumbnail,\r\n            link: e.volumeInfo.previewLink,\r\n            key: e.id,\r\n          })),\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    console.log('Handle', this.state.search);\r\n  };\r\n\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('Button Clicked', this.state.search, e);\r\n    this.searchBooks(this.state.search);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <div className=\"container fluid\">\r\n          <div className=\"row\">\r\n            <Col size=\"md-6\">\r\n              <h2>Book Search</h2>\r\n              <SearchForm\r\n                value={this.state.search}\r\n                handleInputChange={this.handleInputChange}\r\n                handleFormSubmit={this.handleFormSubmit}\r\n              />\r\n            </Col>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <Col size=\"md-12\">\r\n              {[...this.state.books].map((item) => (\r\n                <BookCard\r\n                  title={item.title}\r\n                  authors={item.authors}\r\n                  description={item.description}\r\n                  image={item.image}\r\n                  link={item.link}\r\n                  key={item.key}\r\n                />\r\n              ))}\r\n            </Col>\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Wrapper from './Components/Wrapper';\nimport Col from './Components/Col';\nimport Search from './utils';\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Wrapper>\n        <Router>\n          <Col size=\"md-12\">\n            <Switch>\n              <Route exact path=\"/\" component={Search} />\n            </Switch>\n          </Col>\n        </Router>\n\n        <Col size=\"md-12\"></Col>\n      </Wrapper>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}